<!DOCTYPE html>
<!-- saved from url=(0083)https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience -->
<html lang="en" data-reactroot=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Creating a Persistent AR Experience | Apple Developer Documentation</title><meta content="width=device-width, initial-scale=1 viewport-fit=cover" name="viewport"><meta data-pid="270566"><link href="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/fonts" media="all" rel="stylesheet" type="text/css"><link href="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/application-6d1a12cb.css" media="all" rel="stylesheet" type="text/css"><noscript><link href="/documentation/__assets/nojs-c6be9131.css" media="all" rel="stylesheet" type="text/css"/></noscript><link rel="mask-icon" href="https://developer.apple.com/documentation/__assets/apple-logo.svg" color="#000"><link rel="shortcut icon" href="https://developer.apple.com/documentation/__assets/favicon.ico"><script src="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/shared-570ae4d6.js"></script><script id="init-data" type="application/json">{"variant":{"paths":["documentation\/arkit\/creating_a_persistent_ar_experience"]}}</script><script src="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/init-be6d8150.js"></script></head><style id="stylish-19" class="stylish" type="text/css">/* Google Docs Dark UI by UGoBoom         */
/* Version 1.0                            */
/* Published Oct 26 2015                  */
/* Aesthetic inspired by Vertex-gtk theme */

@namespace url(http://www.w3.org/1999/xhtml);</style><body style=""><div id="_omniture_top">
      <script>
        var s_account="awdappledeveloper"
      </script>
      <script src="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/analytics.js"></script>
      <script>
        s.pageName= AC && AC.Tracking && AC.Tracking.pageName();
        s.channel="www.documentation.developer"

        var s_code=s.t();if(s_code)document.write(s_code)
      </script>
    </div><div id="app"><div><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#main" id="skip-localnav" class="showonfocus hidden">Skip Navigation</a><aside id="ac-gn-segmentbar" class="ac-gn-segmentbar" lang="en-US" dir="ltr"></aside><input type="checkbox" id="ac-gn-menustate" class="ac-gn-menustate"><nav id="ac-globalnav" class="js no-touch" role="navigation" aria-label="Global" data-hires="false" data-analytics-region="global nav" lang="en-US">
      <div class="ac-gn-content">
        <ul class="ac-gn-header">
          <li class="ac-gn-item ac-gn-menuicon">
            <label class="ac-gn-menuicon-label" for="ac-gn-menustate" aria-hidden="true">
              <span class="ac-gn-menuicon-bread ac-gn-menuicon-bread-top">
                <span class="ac-gn-menuicon-bread-crust ac-gn-menuicon-bread-crust-top"></span>
              </span>
              <span class="ac-gn-menuicon-bread ac-gn-menuicon-bread-bottom">
                <span class="ac-gn-menuicon-bread-crust ac-gn-menuicon-bread-crust-bottom"></span>
              </span>
            </label>
            <a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#ac-gn-menustate" class="ac-gn-menuanchor ac-gn-menuanchor-open" id="ac-gn-menuanchor-open">
              <span class="ac-gn-menuanchor-label">Open Menu</span>
            </a>
            <a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#" class="ac-gn-menuanchor ac-gn-menuanchor-close" id="ac-gn-menuanchor-close">
              <span class="ac-gn-menuanchor-label">Close Menu</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-apple">
            <a class="ac-gn-link ac-gn-link-apple-developer" href="https://developer.apple.com/" data-analytics-title="appledeveloper home" id="ac-gn-firstfocus-small">
              <span class="ac-gn-link-text">Apple Developer</span>
            </a>
          </li>
        </ul>
        <div class="ac-gn-search-placeholder-container" role="search">
          <div class="ac-gn-search ac-gn-search-small">
            <a id="ac-gn-link-search-small" class="ac-gn-link" href="https://developer.apple.com/search/" data-analytics-title="search" data-analytics-click="search" data-analytics-intrapage-link="" aria-label="Search Developer" role="button" aria-haspopup="true">
              <div class="ac-gn-search-placeholder-bar">
                <div class="ac-gn-search-placeholder-input">
                  <div class="ac-gn-search-placeholder-input-text" aria-hidden="true">
                    <div class="ac-gn-link-search ac-gn-search-placeholder-input-icon"></div>
                    <span class="ac-gn-search-placeholder">Search Developer</span>
                  </div>
                </div>
                <div class="ac-gn-searchview-close ac-gn-searchview-close-small ac-gn-search-placeholder-searchview-close">
                  <span class="ac-gn-searchview-close-cancel" aria-hidden="true">Cancel</span>
                </div>
              </div>
            </a>
          </div>
        </div>
        <ul class="ac-gn-list">
          <li class="ac-gn-item ac-gn-apple">
            <a class="ac-gn-link ac-gn-link-apple-developer" href="https://developer.apple.com/" data-analytics-title="appledeveloper home" id="ac-gn-firstfocus">
              <span class="ac-gn-link-text">Apple Developer</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-discover">
            <a class="ac-gn-link ac-gn-link-discover" href="https://developer.apple.com/discover/" data-analytics-title="discover">
              <span class="ac-gn-link-text">Discover</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-design">
            <a class="ac-gn-link ac-gn-link-design" href="https://developer.apple.com/design/" data-analytics-title="design">
              <span class="ac-gn-link-text">Design</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-develop">
            <a class="ac-gn-link ac-gn-link-develop" href="https://developer.apple.com/develop/" data-analytics-title="develop">
              <span class="ac-gn-link-text">Develop</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-distribute">
            <a class="ac-gn-link ac-gn-link-distribute" href="https://developer.apple.com/distribute/" data-analytics-title="distribute">
              <span class="ac-gn-link-text">Distribute</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-dsupport">
            <a class="ac-gn-link ac-gn-link-dsupport" href="https://developer.apple.com/support/" data-analytics-title="dsupport">
              <span class="ac-gn-link-text">Support</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-account">
            <a class="ac-gn-link ac-gn-link-account" href="https://developer.apple.com/account/" data-analytics-title="account">
              <span class="ac-gn-link-text">Account</span>
            </a>
          </li>
          <li class="ac-gn-item ac-gn-item-menu ac-gn-search" role="search">
            <a id="ac-gn-link-search" class="ac-gn-link ac-gn-link-search" href="https://developer.apple.com/search/" data-analytics-title="search" data-analytics-click="search" data-analytics-intrapage-link="" aria-label="Search Developer" role="button" aria-haspopup="true"></a>
          </li>
        </ul>
        <aside id="ac-gn-searchview" class="ac-gn-searchview" role="search" data-analytics-region="search">
          <div class="ac-gn-searchview-content">
            <div class="ac-gn-searchview-bar">
              <div class="ac-gn-searchview-bar-wrapper">
                <form id="ac-gn-searchform" class="ac-gn-searchform" action="https://developer.apple.com/search/" method="get">
                  <div class="ac-gn-searchform-wrapper">
                    <input id="ac-gn-searchform-input" class="ac-gn-searchform-input" type="text" name="q" aria-label="Search Developer" placeholder="Search Developer" autocorrect="off" autocapitalize="off" autocomplete="off" spellcheck="false">
                    <button id="ac-gn-searchform-submit" class="ac-gn-searchform-submit" type="submit" disabled="" aria-label="Submit Search"></button>
                    <button id="ac-gn-searchform-reset" class="ac-gn-searchform-reset" type="reset" disabled="" aria-label="Clear Search">
                      <span class="ac-gn-searchform-reset-background"></span>
                    </button>
                  </div>
                </form>
                <button id="ac-gn-searchview-close-small" class="ac-gn-searchview-close ac-gn-searchview-close-small" aria-label="Cancel Search">
                  <span class="ac-gn-searchview-close-cancel" aria-hidden="true">
                    Cancel
                  </span>
                </button>
              </div>
            </div>
            <aside id="ac-gn-searchresults" class="ac-gn-searchresults" data-string-quicklinks="Quick Links" data-string-suggestions="Suggested Searches" data-string-noresults=""></aside>
          </div>
          <button id="ac-gn-searchview-close" class="ac-gn-searchview-close" aria-label="Cancel Search">
            <span class="ac-gn-searchview-close-wrapper">
              <span class="ac-gn-searchview-close-left"></span>
              <span class="ac-gn-searchview-close-right"></span>
            </span>
          </button>
        </aside>
      </div>
    </nav><div class="ac-gn-blur"></div><div id="ac-gn-curtain" class="ac-gn-curtain"></div><div id="ac-gn-placeholder" class="ac-nav-placeholder"></div><input type="checkbox" id="localnav-menustate" class="localnav-menustate" aria-hidden="true"><div id="localnav-sticky-placeholder" class="css-sticky localnav-sticking"></div><nav id="localnav" class="localnav localnav-dark theme-dark localnav-scrim localnav-noborder css-sticky localnav-sticking" role="navigation" aria-label="API Reference" data-sticky="true"><div class="localnav-wrapper"><div class="referencenav"><div class="localnav-background"></div><div class="localnav-content"><a href="https://developer.apple.com/documentation" class="localnav-title">Documentation</a><div class="localnav-menu"><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#localnav-menustate" id="localnav-menustate-open" class="localnav-menucta-anchor localnav-menucta-anchor-open"><span class="localnav-menucta-anchor-label" aria-hidden="true">Open Menu</span></a><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#" id="localnav-menustate-close" class="localnav-menucta-anchor localnav-menucta-anchor-close"><span class="localnav-menucta-anchor-label" aria-hidden="true">Close Menu</span></a><div class="localnav-menu-tray"><ul aria-label="Breadcrumbs" class="localnav-menu-items localnav-menu-breadcrumbs"><li class="localnav-menu-item localnav-menu-breadcrumb-item"><a class="localnav-menu-link" href="https://developer.apple.com/documentation/arkit">ARKit</a></li><li class="localnav-menu-item localnav-menu-breadcrumb-item"><div class="localnav-menu-breadcrumb-current-container localnav-menu-link current"><span aria-current="page" class="localnav-menu-breadcrumb-current">Creating a Persistent AR Experience</span></div></li></ul><ul class="localnav-menu-items localnav-menu-settings" data-breadcrumbs-count="2"><li class="localnav-menu-setting language-container"><div class="language-toggle-container"><label for="language-toggle" class="language-toggle-label">Language:</label><select id="language-toggle" class="language-dropdown localnav-menu-link" style="width: 38px;"><option selected="" value="swift">Swift</option><option value="occ">Objective-C</option></select></div><div class="language-list-container"><span class="localnav-menu-setting-label">Language:</span><ul class="language-list"><li class="language-list-item"><span data-language="swift" aria-current="page" class="current-language">Swift</span></li><li class="language-list-item"><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience?language=objc" class="localnav-menu-setting-link">Objective-C</a></li></ul></div></li><li class="localnav-menu-setting"><span class="localnav-menu-setting-label">API Changes:</span><span class="changes-toggle">None</span></li></ul></div><div class="localnav-actions"><div class="localnav-action localnav-action-menucta" aria-hidden="true"><label for="localnav-menustate" class="localnav-menucta"><span class="localnav-menucta-chevron"></span></label></div></div></div></div></div></div></nav><label for="localnav-menustate" id="localnav-curtain" aria-hidden="true"></label><main role="main" id="main" class="main" tabindex="0"><div class="topic-title"><span class="eyebrow">Sample Code</span><h1 class="topic-heading"><span>Creating a Persistent AR Experience</span></h1></div><div class="topic-container section-content row"><div class="topic-description column large-9 medium-9 small-12"><div class="topic-abstract abstract formatted-content"><div><p>Save and load ARKit world-mapping data to allow users to return to previous AR experiences in the same real-world environment.</p></div></div><a href="https://docs-assets.developer.apple.com/published/30e59f3fa0/CreatingAPersistentARExperience.zip" download="" class="downloadsample"><span class="button" aria-label="Download sample code">Download</span></a></div><div class="topic-summary column large-3 medium-3 small-12"><div class="topic-summary-section sdks" role="complementary" aria-label="SDKs"><p class="topic-summary-section-label subsection-label">SDKs</p><ul class="topic-summary-section-list"><li class="topic-summary-section-item sdk"><span aria-label="iOS 12.0+, Available on iOS 12.0 and later" role="text" title="Available on iOS 12.0 and later">iOS 12.0+</span></li><li class="topic-summary-section-item sdk"><span aria-label="Xcode 10.0+, Available on Xcode 10.0 and later" role="text" title="Available on Xcode 10.0 and later">Xcode 10.0+</span></li></ul></div><div class="topic-summary-section frameworks" role="complementary" aria-label="Framework"><p class="topic-summary-section-label subsection-label">Framework</p><ul class="topic-summary-section-list"><li class="topic-summary-section-item"><span>ARKit</span></li></ul></div><div class="topic-summary-section onthispage"><nav class="onthispage-nav" aria-labelledby="onthispage-title"><p id="onthispage-title" class="topic-summary-section-label subsection-label">On This Page</p><ul class="topic-summary-section-list"><li class="topic-summary-section-item"><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#overview" class="icon icon-after icon-chevrondowncircle">Overview</a></li><li class="topic-summary-section-item"><a href="https://developer.apple.com/documentation/arkit/creating_a_persistent_ar_experience#see-also" class="icon icon-after icon-chevrondowncircle">See Also</a></li></ul></nav></div></div><div class="topic-content column large-9 medium-9 small-12" id="topic-content"><section id="overview" class="section"><h2>Overview</h2><div class="formatted-content"><div><p>This sample app demonstrates a simple AR experience for iOS 12 devices. Before exploring the code, try building and running the app to familiarize yourself with the user experience it demonstrates:</p><ol><li><p>Run the app. You can look around and tap to place a virtual 3D object on real-world surfaces. (Tap again to relocate the object.)</p></li><li><p>After you’ve explored the environment, the Save Experience button becomes available. Tap it to save ARKit’s world-mapping data to local storage.</p></li><li><p>Tap the Load Experience button. (You can do this immediately, or after quitting and relaunching the app, even if the app has been terminated in the background.)</p></li><li><p>While ARKit attempts to resume an AR session from the saved world-mapping data, the app displays a snapshot of the camera view from the time that data was saved. For best results, move the device so that the camera view matches the screenshot.</p></li></ol><p>Follow the steps below to see how this app uses the <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldmap"><code><span>ARWorld<wbr>Map</span></code></a> class to save and restore ARKit’s spatial mapping state.</p></div><h3 id="3024336">Run the AR Session and Place AR Content</h3><div><p>This app extends the basic workflow for building an ARKit app. (For details, see <a href="https://developer.apple.com/documentation/arkit/building_your_first_ar_experience">Building Your First AR Experience</a>.) It defines an <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldtrackingconfiguration"><code><span>ARWorld<wbr>Tracking<wbr>Configuration</span></code></a> with plane detection enabled, then runs that configuration in the <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arsession"><code><span>ARSession</span></code></a> attached to the <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arscnview"><code><span>ARSCNView</span></code></a> that displays the AR experience.</p><p>When <a class="symbol-name" href="https://developer.apple.com/documentation/uikit/uitapgesturerecognizer"><code><span>UITap<wbr>Gesture<wbr>Recognizer</span></code></a> detects a tap on the screen, the <code class="code-voice"><span>handle<wbr>Scene<wbr>Tap</span></code> method uses ARKit hit-testing to find a 3D point on a real-world surface, then places an <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor"><code><span>ARAnchor</span></code></a> marking that position. When ARKit calls the delegate method <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arscnviewdelegate/2865794-renderer"><code><span>renderer(_:<wbr>did<wbr>Add:<wbr>for:)</span></code></a>, the app loads a 3D model for <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arscnview"><code><span>ARSCNView</span></code></a> to display at the anchor’s position.</p></div><h3 id="3024337">Capture and Save the AR World Map</h3><div><p>An <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldmap"><code><span>ARWorld<wbr>Map</span></code></a> object contains a snapshot of all the spatial mapping information that ARKit uses to locate the user’s device in real-world space. To save a map that can reliably be used for restoring your AR session later, you’ll first need to find a good time to capture the map.</p><p>ARKit provides a <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arframe/2990930-worldmappingstatus"><code><span>world<wbr>Mapping<wbr>Status</span></code></a> value that indicates whether it’s currently a good time to capture a world map (or if it’s better to wait until ARKit has mapped more of the local environment). This app uses mapping status to provide visual feedback and choose when to make the Save Experience button available:</p><figure id="3024326"><div class="formatted-content"><div class="code-listing"><pre class="code-source" data-language="swift"><code><span class="syntax-comment">// Enable Save button only when the mapping status is good and an object has been placed</span>
<span class="syntax-keyword">switch</span> frame.worldMappingStatus {
<span class="syntax-keyword">case</span> .extending, .mapped:
    saveExperienceButton.isEnabled =
        virtualObjectAnchor != <span class="syntax-literal">nil</span> &amp;&amp; frame.anchors.<span class="syntax-built_in">contains</span>(virtualObjectAnchor!)
<span class="syntax-keyword">default</span>:
    saveExperienceButton.isEnabled = <span class="syntax-literal">false</span>
}
statusLabel.text = <span class="syntax-string">""</span><span class="syntax-string">"
Mapping: <span class="syntax-subst">\(frame.worldMappingStatus.description)</span>
Tracking: <span class="syntax-subst">\(frame.camera.trackingState.description)</span>
"</span><span class="syntax-string">""</span>
</code></pre></div></div></figure><p></p><aside class="aside aside-note" role="note"><p class="aside-name">Note</p><p>Prefer to capture a world map when the status is <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arframe/worldmappingstatus/mapped"><code><span>ARFrame<wbr>.World<wbr>Mapping<wbr>Status<wbr>.mapped</span></code></a> for the best reliability in restoring the saved session. If <code class="code-voice"><span>mapped</span></code> status is difficult to obtain, a map captured with <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arframe/worldmappingstatus/extending"><code><span>ARFrame<wbr>.World<wbr>Mapping<wbr>Status<wbr>.extending</span></code></a> status provides a less reliable fallback.</p></aside><p>When the user taps the Save Experience button, the app calls <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arsession/2968206-getcurrentworldmap"><code><span>get<wbr>Current<wbr>World<wbr>Map(completion<wbr>Handler:)</span></code></a> to capture the map from the running ARSession, then serializes it to a <a class="symbol-name" href="https://developer.apple.com/documentation/foundation/data"><code><span>Data</span></code></a> object with <a class="symbol-name" href="https://developer.apple.com/documentation/foundation/nskeyedarchiver"><code><span>NSKeyed<wbr>Archiver</span></code></a> and writes it to local storage:</p><figure id="3024327"><div class="formatted-content"><div class="code-listing"><pre class="code-source" data-language="swift"><code>sceneView.session.getCurrentWorldMap { worldMap, error <span class="syntax-keyword">in</span>
    <span class="syntax-keyword">guard</span> <span class="syntax-keyword">let</span> <span class="syntax-built_in">map</span> = worldMap
        <span class="syntax-keyword">else</span> { <span class="syntax-keyword">self</span>.showAlert(title: <span class="syntax-string">"Can't get current world map"</span>, message: error!.localizedDescription); <span class="syntax-keyword">return</span> }
    
    <span class="syntax-comment">// Add a snapshot image indicating where the map was captured.</span>
    <span class="syntax-keyword">guard</span> <span class="syntax-keyword">let</span> snapshotAnchor = <span class="syntax-type">SnapshotAnchor</span>(capturing: <span class="syntax-keyword">self</span>.sceneView)
        <span class="syntax-keyword">else</span> { <span class="syntax-built_in">fatalError</span>(<span class="syntax-string">"Can't take snapshot"</span>) }
    <span class="syntax-built_in">map</span>.anchors.append(snapshotAnchor)
    
    <span class="syntax-keyword">do</span> {
        <span class="syntax-keyword">let</span> data = <span class="syntax-keyword">try</span> <span class="syntax-type">NSKeyedArchiver</span>.archivedData(withRootObject: <span class="syntax-built_in">map</span>, requiringSecureCoding: <span class="syntax-literal">true</span>)
        <span class="syntax-keyword">try</span> data.write(to: <span class="syntax-keyword">self</span>.mapSaveURL, options: [.atomic])
        <span class="syntax-type">DispatchQueue</span>.main.async {
            <span class="syntax-keyword">self</span>.loadExperienceButton.isHidden = <span class="syntax-literal">false</span>
            <span class="syntax-keyword">self</span>.loadExperienceButton.isEnabled = <span class="syntax-literal">true</span>
        }
    } <span class="syntax-keyword">catch</span> {
        <span class="syntax-built_in">fatalError</span>(<span class="syntax-string">"Can't save map: <span class="syntax-subst">\(error.localizedDescription)</span>"</span>)
    }
}
</code></pre></div></div></figure><p></p><p>To help a user resume the AR experience from this map later, the app also captures a snapshot of the camera view with the example <code class="code-voice"><span>Snapshot<wbr>Anchor</span></code> class and stores it in the world map.</p></div><h3 id="3024338">Load and Relocalize to a Saved Map</h3><div><p>When the app launches, it checks local storage for a world map file it may have saved in an earlier session:</p><figure id="3024329"><div class="formatted-content"><div class="code-listing"><pre class="code-source" data-language="swift"><code><span class="syntax-keyword">do</span> {
    <span class="syntax-keyword">guard</span> <span class="syntax-keyword">let</span> worldMap = <span class="syntax-keyword">try</span> <span class="syntax-type">NSKeyedUnarchiver</span>.unarchivedObject(ofClass: <span class="syntax-type">ARWorldMap</span>.<span class="syntax-keyword">self</span>, from: data)
        <span class="syntax-keyword">else</span> { <span class="syntax-built_in">fatalError</span>(<span class="syntax-string">"No ARWorldMap in archive."</span>) }
    <span class="syntax-keyword">return</span> worldMap
} <span class="syntax-keyword">catch</span> {
    <span class="syntax-built_in">fatalError</span>(<span class="syntax-string">"Can't unarchive ARWorldMap from file data: <span class="syntax-subst">\(error)</span>"</span>)
}
</code></pre></div></div></figure><p></p><p>If that file exists and can be deserialized as an <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldmap"><code><span>ARWorld<wbr>Map</span></code></a> object, the app makes its Load Experience button available. When you tap the button, the app tells ARKit to attempt resuming the session captured in that world map, by creating and running an <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldtrackingconfiguration"><code><span>ARWorld<wbr>Tracking<wbr>Configuration</span></code></a> using that map as the <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arworldtrackingconfiguration/2968180-initialworldmap"><code><span>initial<wbr>World<wbr>Map</span></code></a>:</p><figure id="3024330"><div class="formatted-content"><div class="code-listing"><pre class="code-source" data-language="swift"><code><span class="syntax-keyword">let</span> configuration = <span class="syntax-keyword">self</span>.defaultConfiguration <span class="syntax-comment">// this app's standard world tracking settings</span>
configuration.initialWorldMap = worldMap
sceneView.session.run(configuration, options: [.resetTracking, .removeExistingAnchors])
</code></pre></div></div></figure><p></p><p>ARKit then attempts to <em>relocalize</em> to the new world map—that is, to reconcile the received spatial-mapping information with what it senses of the local environment. This process is more likely to succeed if the user moves to areas of the local environment that they visited during the previous session. To help the user successfully resume the saved experience, this app uses the example <code class="code-voice"><span>Snapshot<wbr>Anchor</span></code> class to save a camera image in the world map, then displays that image while ARKit is relocalizing.</p></div><h3 id="3024339">Restore AR Content After Relocalization</h3><div><p>Saving a world map also archives all anchors currently associated with the AR session. After you successfully run a session from a saved world map, the session contains all anchors previously saved in the map. You can use saved anchors to restore virtual content from a previous session.</p><p>In this app, after relocalizing to a previously saved world map, the virtual object placed in the previous session automatically appears at its saved position. The same <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arscnview"><code><span>ARSCNView</span></code></a> delegate method <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/arscnviewdelegate/2865794-renderer"><code><span>renderer(_:<wbr>did<wbr>Add:<wbr>for:)</span></code></a> fires both when you directly add an anchor to the session and when the session restores anchors from a world map. To determine which saved anchor represents the virtual object, this app uses the <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor"><code><span>ARAnchor</span></code></a> <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor/2873672-name"><code><span>name</span></code></a> property.</p><figure id="3024332"><div class="formatted-content"><div class="code-listing"><pre class="code-source" data-language="swift"><code><span class="syntax-function"><span class="syntax-keyword">func</span> <span class="syntax-title">renderer</span><span class="syntax-params">(<span class="syntax-number">_</span> renderer: SCNSceneRenderer, didAdd node: SCNNode, <span class="syntax-keyword">for</span> anchor: ARAnchor)</span></span> {
    <span class="syntax-keyword">guard</span> anchor.name == virtualObjectAnchorName
        <span class="syntax-keyword">else</span> { <span class="syntax-keyword">return</span> }
    
    <span class="syntax-comment">// save the reference to the virtual object anchor when the anchor is added from relocalizing</span>
    <span class="syntax-keyword">if</span> virtualObjectAnchor == <span class="syntax-literal">nil</span> {
        virtualObjectAnchor = anchor
    }
    node.addChildNode(virtualObject)
}
</code></pre></div></div></figure><p></p><p>In your own AR experience, you can choose among various techniques for restoring virtual content associated with saved anchors. For example:</p><ul><li><p>An app for visualizing furniture from a fixed catalog might save an identifier for each placed object in the corresponding anchor’s <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor/2873672-name"><code><span>name</span></code></a>, then use that identifier to determine which 3D model to display when resuming a session from a saved map.</p></li><li><p>A game that places virtual characters to play in the user’s environment might create various custom <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor"><code><span>ARAnchor</span></code></a> subclasses to store gameplay data specific to each character, so that resuming a session from a saved map also restores the state of the game. (See <a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchor"><code><span>ARAnchor</span></code></a> Subclassing Notes and <code class="code-voice"><span>ARAnchor<wbr>Copying</span></code>]<a class="symbol-name" href="https://developer.apple.com/documentation/arkit/aranchorcopying"><code><span>ARAnchor<wbr>Copying</span></code></a>.)</p></li></ul></div></div></section></div></div><section id="see-also" class="contenttable section alt-light-container row"><div class="alt-light"><div class="section-content"><h2 class="contenttable-title">See Also</h2><section id="2984782" class="contenttable-section"><div class="contenttable-container row"><div class="contenttable-section-title-container column large-3 medium-3 small-12"><h3 class="contenttable-section-title">AR World Sharing and Persistence</h3></div><div class="contenttable-section-content column large-9 medium-9 small-12"><div class="task-topics"><div class="task-topic"><div class="task-topic-info"><a class="has-adjacent-element symbol-name" href="https://developer.apple.com/documentation/arkit/creating_a_multiuser_ar_experience"><svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 0 15 15" class="svg-icon symbol-name-icon" aria-hidden="true"><title>Sample Code</title><g class="svg-icon-small" fill-rule="evenodd"><path d="M9 15L9 14 11.0104712 14C11.5759162 14 12.1832461 13.86 12.1832461 12.14L12.1832461 10.28C12.1529524 9.27545906 12.5278004 8.29817424 13.2303665 7.55L13.3246073 7.47C12.5372999 6.72356427 12.1089306 5.6990224 12.1413613 4.64L12.1413613 3.42C12.1413613 3 12.1413613 1 11.0104712 1L9 1 9 0 11.0104712 0C12.3926702 0 13.1884817 1.28 13.1884817 3.42L13.1884817 4.64C13.1884817 6 13.8691099 6.95 14.4764398 6.95L15 6.95 15 7.95 14.4764398 7.95C14.2508552 7.96082278 14.0394061 8.05818375 13.8900524 8.22 13.4104115 8.78359074 13.1611361 9.49421163 13.1884817 10.22L13.1884817 12.09C13.1884817 14 12.4764398 15 11.0104712 15L9 15zM6 15L4.28 15C2.87 15 2 13.85 2 12L2 10.13C2 8.46 1.66 8 .5 8L0 8 0 7 .5 7C1.61 6.95 2 6.3 2 4.49L2 3.27C2 1.32 2.92 0 4.28 0L6 0 6 1 4.28 1C3.4 1 3 2.14 3 3.27L3 4.49C3.11371534 5.55342654 2.78458756 6.61676246 2.09 7.43 2.79401717 8.14117553 3.12990379 9.13776222 3 10.13L3 12C3 12.75 3.17 14 4.29 14L6 14 6 15z"></path></g></svg><span>Creating a Multiuser AR Experience</span></a><div class="task-topic-abstract task-topic-data abstract formatted-content"><div><p>Transmit ARKit world-mapping data between nearby devices with the MultipeerConnectivity framework to create a shared basis for AR experiences.</p></div></div></div></div><div class="task-topic"><div class="task-topic-info"><a class="has-adjacent-element symbol-name symbol-name-decorated" href="https://developer.apple.com/documentation/arkit/arworldmap"><code class="display-name"><span class="decorator">class </span><span class="identifier">ARWorld<wbr>Map</span></code></a><div class="task-topic-abstract task-topic-data abstract formatted-content"><div><p>The space-mapping state and set of anchors from a world-tracking AR session.</p></div></div></div></div></div></div></div></section></div></div></section></main><section id="globalfooter-wrapper"><footer id="globalfooter" role="contentinfo">
        <nav class="footer-breadory">
          <a href="https://developer.apple.com/" class="home breadcrumbs-home"><span aria-hidden="true"></span><span class="breadcrumbs-home-label">Developer</span></a>
          <section class="breadcrumbs">
            <ol class="breadcrumbs-list">
              <li><a href="https://developer.apple.com/documentation">Documentation</a></li>
            </ol>
          </section>
          <div id="directorynav" class="directorynav">
            <div id="dn-cola" class="column">
              <h3><a href="https://developer.apple.com/discover/">Discover</a></h3>
              <ul>
                <li><a href="https://developer.apple.com/macos/">macOS</a></li>
                <li><a href="https://developer.apple.com/ios/">iOS</a></li>
                <li><a href="https://developer.apple.com/watchos/">watchOS</a></li>
                <li><a href="https://developer.apple.com/tvos/">tvOS</a></li>
                <li><a href="https://developer.apple.com/safari/">Safari and Web</a></li>
                <li><a href="https://developer.apple.com/games/">Games</a></li>
                <li><a href="https://developer.apple.com/enterprise/">Enterprise</a></li>
                <li><a href="https://developer.apple.com/education/">Education</a></li>
                <li><a href="https://developer.apple.com/wwdc/">WWDC</a></li>
              </ul>
            </div>
            <div id="dn-colb" class="column">
              <h3><a href="https://developer.apple.com/design/">Design</a></h3>
              <ul>
                <li><a href="https://developer.apple.com/design/human-interface-guidelines/">Human Interface Guidelines</a></li>
                <li><a href="https://developer.apple.com/design/resources/">Resources</a></li>
                <li><a href="https://developer.apple.com/videos/design/">Videos</a></li>
                <li><a href="https://developer.apple.com/design/awards/">Apple Design Awards</a></li>
                <li><a href="https://developer.apple.com/accessibility/">Accessibility</a></li>
                <li><a href="https://developer.apple.com/internationalization/">Internationalization</a></li>
                <li><a href="https://developer.apple.com/accessories/">Accessories</a></li>
              </ul>
            </div>
            <div id="dn-colc" class="column">
              <h3><a href="https://developer.apple.com/develop/">Develop</a></h3>
              <ul>
                <li><a href="https://developer.apple.com/xcode/">Xcode</a></li>
                <li><a href="https://developer.apple.com/swift/">Swift</a></li>
                <li><a href="https://developer.apple.com/swift-playgrounds/">Swift Playgrounds</a></li>
                <li><a href="https://developer.apple.com/testflight/">TestFlight</a></li>
                <li><a href="https://developer.apple.com/documentation/">Documentation</a></li>
                <li><a href="https://developer.apple.com/videos/">Videos</a></li>
                <li><a href="https://developer.apple.com/download/">Downloads</a></li>
              </ul>
            </div>
            <div id="dn-cold" class="column">
              <h3><a href="https://developer.apple.com/distribute/">Distribute</a></h3>
              <ul>
                <li><a href="https://developer.apple.com/app-store/">App Store</a></li>
                <li><a href="https://developer.apple.com/macos/distribution/">Mac Software</a></li>
                <li><a href="https://developer.apple.com/app-store/review/">App Review</a></li>
                <li><a href="https://developer.apple.com/programs/volume/">Volume Purchase Program</a></li>
                <li><a href="https://developer.apple.com/programs/volume/b2b/">Custom B2B Apps</a></li>
                <li><a href="https://developer.apple.com/enterprise/distribute/">Enterprise Apps</a></li>
                <li><a href="https://developer.apple.com/safari/extensions/">Safari Extensions</a></li>
                <li><a href="https://developer.apple.com/app-store/marketing/guidelines/">Marketing Resources</a></li>
                <li><a href="https://developer.apple.com/softwarelicensing/">Trademark Licensing</a></li>
              </ul>
            </div>
            <div id="dn-cole" class="column">
              <h3><a href="https://developer.apple.com/support/">Support</a></h3>
              <ul>
                <li><a href="https://forums.developer.apple.com/">Developer Forums</a></li>
                <li><a href="https://developer.apple.com/bug-reporting/">Bug Reporting</a></li>
                <li><a href="https://developer.apple.com/terms/">License Agreements</a></li>
                <li><a href="https://developer.apple.com/system-status/">System Status</a></li>
                <li><a href="https://developer.apple.com/contact/">Contact Us</a></li>
                <br>
                <h3><a href="https://developer.apple.com/account/">Account</a></h3>
                <ul>
                  <li><a href="https://developer.apple.com/programs/">Developer Program</a></li>
                  <li><a href="https://developer.apple.com/account/ios/certificate/">Certificates, IDs &amp; Profiles</a></li>
                  <li><a href="https://appstoreconnect.apple.com/">App Store Connect</a></li>
                </ul>
              </ul>
            </div>
          </div>
        </nav>
        <div class="ac-gf-footer-legal">
          <div class="ac-gf-footer-news"> To receive the latest developer news, visit and subscribe to our <a href="https://developer.apple.com/news/">News and Updates</a>.
          </div>
          <div class="ac-gf-footer-legal-copyright">Copyright © 2019 Apple Inc. All rights reserved.</div>
          <div class="ac-gf-footer-legal-links">
            <a href="https://www.apple.com/legal/internet-services/terms/site.html" class="first">Terms of Use</a>
            <a href="https://www.apple.com/privacy/privacy-policy/">Privacy Policy</a>
            <a href="https://developer.apple.com/bug-reporting/">Report Bugs</a>
            <a href="https://developer.apple.com/contact/submit/?subject=website-feedback">Feedback</a>
          </div>
          <div class="ac-gf-footer-language-links">
            <a href="https://developer.apple.com/cn/" class="first">简体中文</a>
            <a href="https://developer.apple.com/jp/">日本語</a>
            <a href="https://developer.apple.com/kr/">한국어</a>
          </div>
        </div>
      </footer></section></div></div><script id="bootstrap-data" type="application/json">{"id":3016216,"title":{"content":"Creating a Persistent AR Experience"},"abstract":"<div><p>Save and load ARKit world-mapping data to allow users to return to previous AR experiences in the same real-world environment.<\/p><\/div>","availability":[{"introduced":"12.0","current":"12.1","platform":"iOS"},{"introduced":"10.0","current":"10.1","platform":"Xcode"}],"discussion":"<div><p>This sample app demonstrates a simple AR experience for iOS 12 devices. Before exploring the code, try building and running the app to familiarize yourself with the user experience it demonstrates:<\/p><ol><li><p>Run the app. You can look around and tap to place a virtual 3D object on real-world surfaces. (Tap again to relocate the object.)<\/p><\/li><li><p>After you’ve explored the environment, the Save Experience button becomes available. Tap it to save ARKit’s world-mapping data to local storage.<\/p><\/li><li><p>Tap the Load Experience button. (You can do this immediately, or after quitting and relaunching the app, even if the app has been terminated in the background.)<\/p><\/li><li><p>While ARKit attempts to resume an AR session from the saved world-mapping data, the app displays a snapshot of the camera view from the time that data was saved. For best results, move the device so that the camera view matches the screenshot.<\/p><\/li><\/ol><p>Follow the steps below to see how this app uses the <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldmap\"><code><span>ARWorld<wbr\/>Map<\/span><\/code><\/a> class to save and restore ARKit’s spatial mapping state.<\/p><\/div><h3 id=\"3024336\">Run the AR Session and Place AR Content<\/h3><div><p>This app extends the basic workflow for building an ARKit app. (For details, see <a href=\"\/documentation\/arkit\/building_your_first_ar_experience\">Building Your First AR Experience<\/a>.) It defines an <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldtrackingconfiguration\"><code><span>ARWorld<wbr\/>Tracking<wbr\/>Configuration<\/span><\/code><\/a> with plane detection enabled, then runs that configuration in the <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arsession\"><code><span>ARSession<\/span><\/code><\/a> attached to the <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arscnview\"><code><span>ARSCNView<\/span><\/code><\/a> that displays the AR experience.<\/p><p>When <a class=\"symbol-name\" href=\"\/documentation\/uikit\/uitapgesturerecognizer\"><code><span>UITap<wbr\/>Gesture<wbr\/>Recognizer<\/span><\/code><\/a> detects a tap on the screen, the <code class=\"code-voice\"><span>handle<wbr\/>Scene<wbr\/>Tap<\/span><\/code> method uses ARKit hit-testing to find a 3D point on a real-world surface, then places an <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\"><code><span>ARAnchor<\/span><\/code><\/a> marking that position. When ARKit calls the delegate method <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arscnviewdelegate\/2865794-renderer\"><code><span>renderer(_:<wbr\/>did<wbr\/>Add:<wbr\/>for:)<\/span><\/code><\/a>, the app loads a 3D model for <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arscnview\"><code><span>ARSCNView<\/span><\/code><\/a> to display at the anchor’s position.<\/p><\/div><h3 id=\"3024337\">Capture and Save the AR World Map<\/h3><div><p>An <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldmap\"><code><span>ARWorld<wbr\/>Map<\/span><\/code><\/a> object contains a snapshot of all the spatial mapping information that ARKit uses to locate the user’s device in real-world space. To save a map that can reliably be used for restoring your AR session later, you’ll first need to find a good time to capture the map.<\/p><p>ARKit provides a <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arframe\/2990930-worldmappingstatus\"><code><span>world<wbr\/>Mapping<wbr\/>Status<\/span><\/code><\/a> value that indicates whether it’s currently a good time to capture a world map (or if it’s better to wait until ARKit has mapped more of the local environment). This app uses mapping status to provide visual feedback and choose when to make the Save Experience button available:<\/p><figure id=\"3024326\"><div class=\"formatted-content\"><div class=\"code-listing\"><pre class=\"code-source\" data-language=\"swift\"><code>\/\/ Enable Save button only when the mapping status is good and an object has been placed\nswitch frame.worldMappingStatus {\ncase .extending, .mapped:\n    saveExperienceButton.isEnabled =\n        virtualObjectAnchor != nil &amp;&amp; frame.anchors.contains(virtualObjectAnchor!)\ndefault:\n    saveExperienceButton.isEnabled = false\n}\nstatusLabel.text = &quot;&quot;&quot;\nMapping: \\(frame.worldMappingStatus.description)\nTracking: \\(frame.camera.trackingState.description)\n&quot;&quot;&quot;\n<\/code><\/pre><\/div><\/div><\/figure><p><\/p><aside class=\"aside aside-note\" role=\"note\"><p class=\"aside-name\">Note<\/p><p>Prefer to capture a world map when the status is <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arframe\/worldmappingstatus\/mapped\"><code><span>ARFrame<wbr\/>.World<wbr\/>Mapping<wbr\/>Status<wbr\/>.mapped<\/span><\/code><\/a> for the best reliability in restoring the saved session. If <code class=\"code-voice\"><span>mapped<\/span><\/code> status is difficult to obtain, a map captured with <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arframe\/worldmappingstatus\/extending\"><code><span>ARFrame<wbr\/>.World<wbr\/>Mapping<wbr\/>Status<wbr\/>.extending<\/span><\/code><\/a> status provides a less reliable fallback.<\/p><\/aside><p>When the user taps the Save Experience button, the app calls <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arsession\/2968206-getcurrentworldmap\"><code><span>get<wbr\/>Current<wbr\/>World<wbr\/>Map(completion<wbr\/>Handler:)<\/span><\/code><\/a> to capture the map from the running ARSession, then serializes it to a <a class=\"symbol-name\" href=\"\/documentation\/foundation\/data\"><code><span>Data<\/span><\/code><\/a> object with <a class=\"symbol-name\" href=\"\/documentation\/foundation\/nskeyedarchiver\"><code><span>NSKeyed<wbr\/>Archiver<\/span><\/code><\/a> and writes it to local storage:<\/p><figure id=\"3024327\"><div class=\"formatted-content\"><div class=\"code-listing\"><pre class=\"code-source\" data-language=\"swift\"><code>sceneView.session.getCurrentWorldMap { worldMap, error in\n    guard let map = worldMap\n        else { self.showAlert(title: &quot;Can&#x27;t get current world map&quot;, message: error!.localizedDescription); return }\n    \n    \/\/ Add a snapshot image indicating where the map was captured.\n    guard let snapshotAnchor = SnapshotAnchor(capturing: self.sceneView)\n        else { fatalError(&quot;Can&#x27;t take snapshot&quot;) }\n    map.anchors.append(snapshotAnchor)\n    \n    do {\n        let data = try NSKeyedArchiver.archivedData(withRootObject: map, requiringSecureCoding: true)\n        try data.write(to: self.mapSaveURL, options: [.atomic])\n        DispatchQueue.main.async {\n            self.loadExperienceButton.isHidden = false\n            self.loadExperienceButton.isEnabled = true\n        }\n    } catch {\n        fatalError(&quot;Can&#x27;t save map: \\(error.localizedDescription)&quot;)\n    }\n}\n<\/code><\/pre><\/div><\/div><\/figure><p><\/p><p>To help a user resume the AR experience from this map later, the app also captures a snapshot of the camera view with the example <code class=\"code-voice\"><span>Snapshot<wbr\/>Anchor<\/span><\/code> class and stores it in the world map.<\/p><\/div><h3 id=\"3024338\">Load and Relocalize to a Saved Map<\/h3><div><p>When the app launches, it checks local storage for a world map file it may have saved in an earlier session:<\/p><figure id=\"3024329\"><div class=\"formatted-content\"><div class=\"code-listing\"><pre class=\"code-source\" data-language=\"swift\"><code>do {\n    guard let worldMap = try NSKeyedUnarchiver.unarchivedObject(ofClass: ARWorldMap.self, from: data)\n        else { fatalError(&quot;No ARWorldMap in archive.&quot;) }\n    return worldMap\n} catch {\n    fatalError(&quot;Can&#x27;t unarchive ARWorldMap from file data: \\(error)&quot;)\n}\n<\/code><\/pre><\/div><\/div><\/figure><p><\/p><p>If that file exists and can be deserialized as an <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldmap\"><code><span>ARWorld<wbr\/>Map<\/span><\/code><\/a> object, the app makes its Load Experience button available. When you tap the button, the app tells ARKit to attempt resuming the session captured in that world map, by creating and running an <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldtrackingconfiguration\"><code><span>ARWorld<wbr\/>Tracking<wbr\/>Configuration<\/span><\/code><\/a> using that map as the <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arworldtrackingconfiguration\/2968180-initialworldmap\"><code><span>initial<wbr\/>World<wbr\/>Map<\/span><\/code><\/a>:<\/p><figure id=\"3024330\"><div class=\"formatted-content\"><div class=\"code-listing\"><pre class=\"code-source\" data-language=\"swift\"><code>let configuration = self.defaultConfiguration \/\/ this app&#x27;s standard world tracking settings\nconfiguration.initialWorldMap = worldMap\nsceneView.session.run(configuration, options: [.resetTracking, .removeExistingAnchors])\n<\/code><\/pre><\/div><\/div><\/figure><p><\/p><p>ARKit then attempts to <em>relocalize<\/em> to the new world map—that is, to reconcile the received spatial-mapping information with what it senses of the local environment. This process is more likely to succeed if the user moves to areas of the local environment that they visited during the previous session. To help the user successfully resume the saved experience, this app uses the example <code class=\"code-voice\"><span>Snapshot<wbr\/>Anchor<\/span><\/code> class to save a camera image in the world map, then displays that image while ARKit is relocalizing.<\/p><\/div><h3 id=\"3024339\">Restore AR Content After Relocalization<\/h3><div><p>Saving a world map also archives all anchors currently associated with the AR session. After you successfully run a session from a saved world map, the session contains all anchors previously saved in the map. You can use saved anchors to restore virtual content from a previous session.<\/p><p>In this app, after relocalizing to a previously saved world map, the virtual object placed in the previous session automatically appears at its saved position. The same <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arscnview\"><code><span>ARSCNView<\/span><\/code><\/a> delegate method <a class=\"symbol-name\" href=\"\/documentation\/arkit\/arscnviewdelegate\/2865794-renderer\"><code><span>renderer(_:<wbr\/>did<wbr\/>Add:<wbr\/>for:)<\/span><\/code><\/a> fires both when you directly add an anchor to the session and when the session restores anchors from a world map. To determine which saved anchor represents the virtual object, this app uses the <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\"><code><span>ARAnchor<\/span><\/code><\/a> <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\/2873672-name\"><code><span>name<\/span><\/code><\/a> property.<\/p><figure id=\"3024332\"><div class=\"formatted-content\"><div class=\"code-listing\"><pre class=\"code-source\" data-language=\"swift\"><code>func renderer(_ renderer: SCNSceneRenderer, didAdd node: SCNNode, for anchor: ARAnchor) {\n    guard anchor.name == virtualObjectAnchorName\n        else { return }\n    \n    \/\/ save the reference to the virtual object anchor when the anchor is added from relocalizing\n    if virtualObjectAnchor == nil {\n        virtualObjectAnchor = anchor\n    }\n    node.addChildNode(virtualObject)\n}\n<\/code><\/pre><\/div><\/div><\/figure><p><\/p><p>In your own AR experience, you can choose among various techniques for restoring virtual content associated with saved anchors. For example:<\/p><ul><li><p>An app for visualizing furniture from a fixed catalog might save an identifier for each placed object in the corresponding anchor’s <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\/2873672-name\"><code><span>name<\/span><\/code><\/a>, then use that identifier to determine which 3D model to display when resuming a session from a saved map.<\/p><\/li><li><p>A game that places virtual characters to play in the user’s environment might create various custom <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\"><code><span>ARAnchor<\/span><\/code><\/a> subclasses to store gameplay data specific to each character, so that resuming a session from a saved map also restores the state of the game. (See <a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchor\"><code><span>ARAnchor<\/span><\/code><\/a> Subclassing Notes and <code class=\"code-voice\"><span>ARAnchor<wbr\/>Copying<\/span><\/code>]<a class=\"symbol-name\" href=\"\/documentation\/arkit\/aranchorcopying\"><code><span>ARAnchor<wbr\/>Copying<\/span><\/code><\/a>.)<\/p><\/li><\/ul><\/div>","repository":{"downloadURL":"https:\/\/docs-assets.developer.apple.com\/published\/30e59f3fa0\/CreatingAPersistentARExperience.zip","checksum":"42dbfbbb70c059285b8923934d3da9cdc310ef291c8cae5128eb23342c6a4f4da4b6d707a04126acf96efe60649a3d9542aed918bfc3fb09e05517d55d985271"},"containingGroup":[{"id":2984782,"role":"task","paths":[],"symbols":[{"id":2958262,"role":"sampleCode","paths":["documentation\/arkit\/creating_a_multiuser_ar_experience"],"abstract":"<div><p>Transmit ARKit world-mapping data between nearby devices with the MultipeerConnectivity framework to create a shared basis for AR experiences.<\/p><\/div>","title":{"content":"Creating a Multiuser AR Experience"}},{"id":3016216,"role":"sampleCode","paths":["documentation\/arkit\/creating_a_persistent_ar_experience"],"abstract":"<div><p>Save and load ARKit world-mapping data to allow users to return to previous AR experiences in the same real-world environment.<\/p><\/div>","title":{"content":"Creating a Persistent AR Experience"}},{"id":2968207,"role":"symbol","usr":"c:objc(cs)ARWorldMap","name":"ARWorldMap","domain":"swift","kind":"cl","availability":[{"platform":"iOS","introduced":"12.0"}],"displayName":"<code class=\"display-name\"><span class=\"decorator\">class <\/span><span class=\"identifier\">ARWorld<wbr\/>Map<\/span><\/code>","paths":["documentation\/arkit\/arworldmap"],"title":{"content":"ARWorldMap"},"abstract":"<div><p>The space-mapping state and set of anchors from a world-tracking AR session.<\/p><\/div>","hasChildren":true}],"title":{"content":"AR World Sharing and Persistence"}}],"modules":[{"title":{"content":"ARKit"},"paths":["documentation\/arkit"],"importStatement":"<import xml:space=\"preserve\"><keyWord>import<\/keyWord> ARKit<\/import>","availability":[{"platform":"iOS","introduced":"11.0"}]}],"role":"sampleCode","language":"swift","roleHeading":"Sample Code","languages":["occ","swift"],"variants":{"occ":{"paths":["documentation\/arkit\/creating_a_persistent_ar_experience"]},"swift":{"paths":["documentation\/arkit\/creating_a_persistent_ar_experience"]}},"pid":270566,"paths":["documentation\/arkit\/creating_a_persistent_ar_experience"],"hierarchy":[[{"id":2869388,"role":"collection","title":{"content":"ARKit"},"paths":["documentation\/arkit"]}]],"legalNotices":{"copyright":"Copyright &copy; 2019 Apple Inc. All rights reserved.","termsOfUse":"https:\/\/www.apple.com\/legal\/internet-services\/terms\/site.html","privacyPolicy":"https:\/\/www.apple.com\/privacy\/privacy-policy"}}</script><script src="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/TopicDetail-e999bc8c.js"></script><script src="./Creating a Persistent AR Experience _ Apple Developer Documentation_files/analytics-8acae80a.js"></script><div id="ac-gn-viewport-emitter">&nbsp;</div><div id="localnav-viewport-emitter">&nbsp;</div></body></html>